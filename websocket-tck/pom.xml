<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2021, 2022 Contributors to the Eclipse Foundation. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>websocket-tck-runner</artifactId>
    <packaging>pom</packaging>
    <name>TCK: websocket</name>
    
    <properties>
        <tck.test.websocket.file>jakarta-websocket-tck-${tck.test.websocket.version}.zip</tck.test.websocket.file>
        <tck.test.websocket.url>https://download.eclipse.org/jakartaee/websocket/2.2/${tck.test.websocket.file}</tck.test.websocket.url>
        <tck.test.websocket.version>${jakarta.tck.websocket.version}</tck.test.websocket.version>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>fish.payara.distributions</groupId>
            <artifactId>${payara.artifact}</artifactId>
            <version>${payara.version}</version>
            <type>zip</type>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>websocket-tck-common</artifactId>
            <version>${jakarta.tck.websocket.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>websocket-tck-spec-tests</artifactId>
            <version>${jakarta.tck.websocket.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <version>1.8.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.junit</groupId>
            <artifactId>junit-bom</artifactId>
            <version>5.7.2</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.netbeans.tools</groupId>
            <artifactId>sigtest-maven-plugin</artifactId>
            <version>1.7</version>
        </dependency>
        <dependency>
            <groupId>fish.payara.arquillian</groupId>
            <artifactId>arquillian-payara-server-managed</artifactId>
            <version>${payara.arquillian.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-servlet-tck</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <url>${tck.test.websocket.url}</url>
                    <unpack>true</unpack>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>installing artifacts</id>
                        <phase>install</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.build.directory}${file.separator}websocket-tck${file.separator}artifacts${file.separator}artifact-install.sh</executable>
                            <workingDirectory>${project.build.directory}${file.separator}websocket-tck${file.separator}artifacts${file.separator}</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>payara-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.websocket-api.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.websocket-client-api.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.servlet-api.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.enterprise.cdi-api.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-core.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-server.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-spi.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-container-grizzly-client.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-container-servlet.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-client.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-container-glassfish-ejb.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-container-glassfish-cdi.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}nucleus-grizzly-all.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}glassfish-grizzly-extra-all.jar</additionalClasspathElement>
                            </additionalClasspathElements>

                            <dependenciesToScan>jakarta.tck:websocket-tck-spec-tests</dependenciesToScan>

                            <test>${run.test}</test>

                            <systemPropertyVariables>
                                <payara.home>${payara.home}</payara.home>
                                <junit.log.traceflag>true</junit.log.traceflag>
                                <harness.log.traceflag>true</harness.log.traceflag>
                                <cts.harness.debug>true</cts.harness.debug>
                                <lib.name>websockettck</lib.name>
                                <ws_wait>10</ws_wait>
                                <porting.ts.url.class.1>com.sun.ts.tests.websocket.lib.implementation.sun.common.SunRIURL</porting.ts.url.class.1>
                                <signature.sigTestClasspath>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.websocket-api.jar${path.separator}${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.websocket-client-api.jar${path.separator}${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-core.jar${path.separator}${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}tyrus-server.jar${path.separator}${project.build.directory}/jdk-bundle/java.base${path.separator}${project.build.directory}/jdk-bundle/java.rmi${path.separator}${project.build.directory}/jdk-bundle/java.sql${path.separator}${project.build.directory}/jdk-bundle/java.naming</signature.sigTestClasspath>
                                <jimage.dir>${project.build.directory}/jdk-bundle</jimage.dir>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
